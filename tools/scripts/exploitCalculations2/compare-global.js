const fs = require('fs');

const TOKEN_TO_PRICE = {
    USDC: 1,
    USDT: 1,
    BTC: 81191.12,
    ETH: 3144.41,
    AVAX: 31.20,
    ARB: 0.622695,
    DAI: 1
};

const AVALANCHE_POOL_LOSSES = {
    AVAX: 29.5232104874,
    USDC: 14.3488329196,
    BTC: 14.5678422879,
    ETH: 28.2237693469,
    USDT: 14.0608255488
};

const ARBITRUM_POOL_LOSSES = {
    USDC: 9.3702882313,
    DAI: 6.7243493318,
    BTC: 10.4506599026,
    ARB: 15.2221977739,
    ETH: 15.1528295655
};

const DECIMALS = {
    AVAX: 18,
    USDC: 6,
    BTC: 8,
    ETH: 18,
    USDT: 6,
    DAI: 18,
    ARB: 18
};

function analyzeChain(network, poolLosses) {
    console.log(`\nAnalyzing ${network.toUpperCase()}:`);
    let totalDollarLoss = 0;
    let totalCurrentValue = 0;
    let totalOriginalValue = 0;

    // Process each token pool
    for (const [token, lossPercentage] of Object.entries(poolLosses)) {
        const finalBalances = JSON.parse(
            fs.readFileSync(`tools/scripts/exploitCalculations2/after-hack/savings/final/${network}/${token}.json`)
        );

        // Calculate current total tokens
        const currentTokens = Object.values(finalBalances).reduce((a, b) => a + Number(b), 0) / (10 ** DECIMALS[token]);
        const currentDollarValue = currentTokens * TOKEN_TO_PRICE[token];

        // Calculate original tokens
        const originalTokens = currentTokens / (1 - (lossPercentage / 100));
        const originalDollarValue = originalTokens * TOKEN_TO_PRICE[token];

        // Calculate loss
        const dollarLoss = originalDollarValue - currentDollarValue;

        console.log(`\n${token}:`);
        console.log(`Current Balance: ${currentTokens.toFixed(4)} ${token} ($${currentDollarValue.toFixed(2)})`);
        console.log(`Original Balance: ${originalTokens.toFixed(4)} ${token} ($${originalDollarValue.toFixed(2)})`);
        console.log(`Loss: ${(originalTokens - currentTokens).toFixed(4)} ${token} ($${dollarLoss.toFixed(2)})`);

        totalDollarLoss += dollarLoss;
        totalCurrentValue += currentDollarValue;
        totalOriginalValue += originalDollarValue;
    }

    // Calculate total rTKNs
    const rtkns = JSON.parse(
        fs.readFileSync(`tools/scripts/exploitCalculations2/after-hack/savings/rtkns/${network}/rtkns.json`)
    );
    const totalRtkns = Object.values(rtkns).reduce((a, b) => a + Number(b), 0);
    const scaledRtkns = totalRtkns / 1.4;

    console.log(`\nSUMMARY for ${network.toUpperCase()}:`);
    console.log(`Total Current Value: $${totalCurrentValue.toFixed(2)}`);
    console.log(`Total Original Value: $${totalOriginalValue.toFixed(2)}`);
    console.log(`Total Dollar Loss: $${totalDollarLoss.toFixed(2)}`);
    console.log(`Total rTKNs: $${totalRtkns.toFixed(2)}`);
    console.log(`Scaled rTKNs (รท1.4): $${scaledRtkns.toFixed(2)}`);
    console.log(`Difference (Loss - Scaled rTKNs): $${(totalDollarLoss - scaledRtkns).toFixed(2)}`);
}

console.log("Loss Analysis Report");
console.log("===================");

analyzeChain('avalanche', AVALANCHE_POOL_LOSSES);
analyzeChain('arbitrum', ARBITRUM_POOL_LOSSES);