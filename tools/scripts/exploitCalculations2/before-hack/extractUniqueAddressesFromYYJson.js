const fs = require('fs');
const { ethers } = require('ethers');

// Read the input JSON file
const rawData = fs.readFileSync('./yield-yak-and-fortifi.json', 'utf8');
let data;

try {
    data = JSON.parse(rawData);
} catch (error) {
    console.error('Error parsing JSON:', error);
    process.exit(1);
}

// Extract and normalize unique user addresses
const uniqueAddresses = [...new Set(data.map(item => {
    try {
        console.log('Processing address:', item.user_address);
        // Remove any whitespace that might exist
        const cleanAddress = item.user_address.trim();
        // Use correct ethers v6 syntax
        const checksumAddress = ethers.utils.getAddress(cleanAddress);
        console.log('Successful conversion:', checksumAddress);
        return checksumAddress;
    } catch (error) {
        console.error(`Invalid address found: ${item.user_address}`);
        console.error('Error details:', error.message);
        return null;
    }
}).filter(address => address !== null))];

// Create output object with array of addresses
const output = {
    unique_addresses: uniqueAddresses
};

// Write to a new JSON file
fs.writeFileSync('unique_addresses.json', JSON.stringify(output, null, 2));

console.log(`Found ${uniqueAddresses.length} unique addresses`);
console.log('Unique addresses:', uniqueAddresses);