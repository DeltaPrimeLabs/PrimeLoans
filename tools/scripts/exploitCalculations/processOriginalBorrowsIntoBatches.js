const fs = require('fs');
const path = require('path');
const { ethers } = require('ethers');
const yargs = require('yargs');

const poolTokenName = 'Usdc'
const inputFileName = `originalBorrows-${poolTokenName}PoolTUP-block-254085962.json`;
const decimalPlaces = 6;
const batchSize = 300;

// Read the input JSON file
const rawData = fs.readFileSync(inputFileName);
const data = JSON.parse(rawData);

// Extract the 'borrows' object
let borrows = data.borrows;
console.log(`Total borrows: ${Object.keys(borrows).length}`);
// console log sum of borrows
const sumOfBorrows = Object.values(borrows).reduce((sum, borrow) => sum + Number(borrow), 0);
console.log(`Sum of borrows: ${sumOfBorrows}`);

// filter out 0 values
borrows = Object.fromEntries(Object.entries(borrows).filter(([_, v]) => v !== "0" && v !== "0.0"));
console.log(`Non-zero borrows: ${Object.keys(borrows).length}`);
// console log sum of borrows
const sumOfBorrowsNonZero = Object.values(borrows).reduce((sum, borrow) => sum + Number(borrow), 0);
console.log(`Sum of non-zero borrows: ${sumOfBorrowsNonZero}`);

// Prepare arrays for addresses and amounts
const addresses = [];
const amounts = [];

// Process each borrow entry
for (const [address, amountStr] of Object.entries(borrows)) {
    // Use ethers.js to parse the decimal string to BigNumber
    const amountBN = ethers.utils.parseUnits(amountStr, decimalPlaces);
    // Push address and amount to arrays
    addresses.push(address);
    amounts.push(amountBN.toString());
}

// Create batches and write to JSON files
const totalEntries = addresses.length;
let batchCount = 0;

for (let i = 0; i < totalEntries; i += batchSize) {
    const batchAddresses = addresses.slice(i, i + batchSize);
    const batchAmounts = amounts.slice(i, i + batchSize);
    const batchData = {
        borrowers: batchAddresses,
        borrowedAmount: batchAmounts,
    };
    batchCount++;
    const outputFileName = `${poolTokenName}_borrows_batch_${batchCount}.json`;
    fs.writeFileSync(outputFileName, JSON.stringify(batchData, null, 2));
    console.log(`Batch ${batchCount} written to ${outputFileName}`);
}
